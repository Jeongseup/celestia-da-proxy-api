// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/Jeongseup",
            "email": "seup87@@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/node_info": {
            "get": {
                "description": "Pings Celestia DA node and returns node info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Returns Celestia DA node info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        },
        "/retrieve_blob": {
            "get": {
                "description": "Retrieves a blob from Celestia DA by height and namespace key",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Retrieves blob by height and namespace key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace key",
                        "name": "namespace_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        },
        "/submit_formdata": {
            "post": {
                "description": "Submits form data (image) to Celestia DA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Submits form data",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        },
        "/submit_metadata": {
            "post": {
                "description": "Submits JSON data to Celestia DA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Submits JSON data",
                "parameters": [
                    {
                        "description": "Data payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        },
        "/{hash}": {
            "get": {
                "description": "Retrieves a blob from Celestia DA by commitment hash",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Retrieves blob by commitment hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commitment hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        },
        "/{namespace}/{index_number}": {
            "get": {
                "description": "Retrieves a blob from Celestia DA by namespace key and index number",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Celestia DA"
                ],
                "summary": "Retrieves blob by namespace key and index number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace key",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Index number",
                        "name": "index_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Data": {
            "type": "object"
        },
        "main.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "nftinfo.online",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Celestia DA API",
	Description:      "This is a sample server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
